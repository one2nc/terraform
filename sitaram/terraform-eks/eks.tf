output "cluster_id" {
  description = "EKS cluster ID."
  value       = module.eks.cluster_id
}

output "cluster_endpoint" {
  description = "Endpoint for EKS control plane."
  value       = module.eks.cluster_endpoint
}

output "cluster_security_group_id" {
  description = "Security group ids attached to the cluster control plane."
  value       = module.eks.cluster_security_group_id
}

output "kubectl_config" {
  description = "kubectl config as generated by the module."
  value       = module.eks.kubeconfig
}

output "config_map_aws_auth" {
  description = "A kubernetes configuration to authenticate to this EKS cluster."
  value       = module.eks.config_map_aws_auth
}

output "cluster_name" {
  description = "Kubernetes Cluster Name"
  value       = null_resource.eks_cluster.triggers.name
}

variable "eks_version" {
  type    = string
  default = "1.18"
}

variable "workers" {
    type = list(object({
        instance_type = string
        name = string
        max_size = number
        min_size = number
        desired = number
    }))
}

resource "null_resource" "eks_cluster" {
  triggers = {
    name = "${local.project_prefix}-cluster"
  }
}

module "eks" {
  source          = "terraform-aws-modules/eks/aws"
  cluster_name    = null_resource.eks_cluster.triggers.name
  cluster_version = var.eks_version
  subnets         = module.vpc.private_subnets

  tags = null_resource.tags.triggers

  vpc_id = module.vpc.vpc_id

  worker_groups = [
    for worker in var.workers: {
        name = worker.name
        instance_type = worker.instance_type
        asg_desired_capacity = worker.desired
        asg_max_size = worker.max_size
        asg_min_size = worker.min_size
        additional_security_group_ids = [aws_security_group.worker_group_mgmt.id]
    }
  ]
}

data "aws_eks_cluster" "cluster" {
  name = module.eks.cluster_id
}

data "aws_eks_cluster_auth" "cluster" {
  name = module.eks.cluster_id
}