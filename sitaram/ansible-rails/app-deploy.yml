---
- hosts: rails_app
  become: yes
  strategy: debug  
  debugger: on_failed
  roles:
    - geerlingguy.passenger

  tasks:
    - name: Ensure demo application is at correct release.
      git:
        repo: https://github.com/geerlingguy/demo-rails-app.git
        version: "{{ app_version }}"
        dest: "{{ app_directory }}"
        accept_hostkey: true
        force: yes
      register: app_updated
      notify: restart nginx

    - name: Ensure secrets file is present.
      template:
        src: templates/secrets.yml.j2
        dest: "{{ app_directory }}/config/secrets.yml"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: 0664
      notify: restart nginx

    - name: "Get ruby version"
      command: "rvm current"
      register: ruby_version

    - name: Install Bundler
      command: gem install bundler:1.17.3 -i /root/.rvm/gems/ruby-2.6.0/
      environment:
        PATH: "{{ ansible_env.PATH }}:/root/.rvm/rubies/ruby-2.6.0/bin/:/root/.rvm/gems/ruby-2.6.0/bin/"

    - name: Create bundle directory
      file:
        path: "{{ app_directory }}/vendor/bundle"
        state: directory

    - name: Install required dependencies with bundler.
      command: "bundle install --path vendor/bundle chdir={{ app_directory }}"
      environment:
        PATH: "{{ ansible_env.PATH }}:/root/.rvm/rubies/ruby-2.6.0/bin/:/root/.rvm/gems/ruby-2.6.0/bin/"
      when: app_updated.changed == true
      notify: restart nginx

    - name: Check if database exists.
      stat: "path={{ app_directory }}/db/{{ app_environment.RAILS_ENV }}.sqlite3"
      register: app_db_exists

    - name: Create database.
      command: "bundle exec rake db:create chdir={{ app_directory }}"
      environment:
        PATH: "{{ ansible_env.PATH }}:/root/.rvm/rubies/ruby-2.6.0/bin/:/root/.rvm/gems/ruby-2.6.0/bin/"
      when: app_db_exists.stat.exists == false
      notify: restart nginx

    - name: "print node version"
      shell: echo $PATH
      register: result
      environment:
              PATH: "{{ ansible_env.PATH }}:/root/.rvm/rubies/ruby-2.6.0/bin/:/root/.rvm/gems/ruby-2.6.0/bin/"
            
    - debug:
        var: result

    - name: Perform deployment-related rake tasks.
      command: "{{ item }} chdir={{ app_directory }}"
      with_items:
        - bundle exec rake db:migrate
        - bundle exec rake assets:precompile
      environment: 
        RAILS_ENV: production
        PATH: "{{ ansible_env.PATH }}:/root/.rvm/rubies/ruby-2.6.0/bin/:/root/.rvm/gems/ruby-2.6.0/bin/"
      when: app_updated.changed == true
      notify: restart nginx

    - name: Ensure demo application has correct user for files.
      file:
        path: "{{ app_directory }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        recurse: yes
      notify: restart nginx
